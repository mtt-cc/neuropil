# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/libneuropil
pkglibdir = $(libdir)/libneuropil
pkgincludedir = $(includedir)/libneuropil

top_builddir = ..

ACLOCAL = /Volumes/SAFE/Development/eclipseWS/neuropil/missing aclocal-1.4
AUTOCONF = /Volumes/SAFE/Development/eclipseWS/neuropil/missing autoconf
AUTOMAKE = /Volumes/SAFE/Development/eclipseWS/neuropil/missing automake-1.4
AUTOHEADER = /Volumes/SAFE/Development/eclipseWS/neuropil/missing autoheader

INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = i686-apple-darwin12.5.0
AR = ar
AS = @AS@
CC = gcc
CXX = g++
CXXCPP = g++ -E
DLLTOOL = @DLLTOOL@
ECHO = /bin/echo
EGREP = grep -E
EXEEXT = 
F77 = 
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
MAKEINFO = makeinfo
OBJDUMP = @OBJDUMP@
OBJEXT = o
PACKAGE = libneuropil
RANLIB = ranlib
RC = @RC@
STRIP = strip
VERSION = 1.4

bin_PROGRAMS = neuropil_node neuropil_controller neuropil_sender neuropil_receiver jrb_test_msg test_node_ser test_memory_alloc
LDADD = -L$(top_srcdir)/src -lneuropil -lpthread -L/Volumes/SAFE/Development/eclipseWS/axtls/libsodium-master/src/libsodium -lsodium
INCLUDES = -I$(top_srcdir)/include -I/Volumes/SAFE/Development/eclipseWS/axtls/libsodium-master/src/libsodium/include

test_memory_alloc_SOURCES = test_memory_alloc.c
test_node_ser_SOURCES = test_node_ser.c
jrb_test_msg_SOURCES = jrb_test_msg.c
test_sodium_crypt_SOURCES = test_sodium_crypt.c
neuropil_node_SOURCES = neuropil_node.c
neuropil_controller_SOURCES = neuropil_controller.c
neuropil_sender_SOURCES = neuropil_sender.c
neuropil_receiver_SOURCES = neuropil_receiver.c

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  neuropil_node$(EXEEXT) neuropil_controller$(EXEEXT) neuropil_sender$(EXEEXT) neuropil_receiver$(EXEEXT) jrb_test_msg$(EXEEXT) test_sodium_crypt$(EXEEXT) test_node_ser$(EXEEXT) test_memory_alloc$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)


DEFS = -DPACKAGE_NAME=\"libneuropil\" -DPACKAGE_TARNAME=\"libneuropil\" -DPACKAGE_VERSION=\"1.4\" -DPACKAGE_STRING=\"libneuropil\ 1.4\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"libneuropil\" -DVERSION=\"1.4\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1  -I. -I$(srcdir) 
CPPFLAGS = 
LDFLAGS = 
LIBS = 
test_memory_alloc_OBJECTS =  test_memory_alloc.$(OBJEXT)
test_memory_alloc_LDADD = $(LDADD)
test_memory_alloc_DEPENDENCIES = 
test_memory_alloc_LDFLAGS = 
test_node_ser_OBJECTS =  test_node_ser.$(OBJEXT)
test_node_ser_LDADD = $(LDADD)
test_node_ser_DEPENDENCIES = 
test_node_ser_LDFLAGS = 
test_sodium_crypt_OBJECTS =  test_sodium_crypt.$(OBJEXT)
test_sodium_crypt_LDADD = $(LDADD)
test_sodium_crypt_DEPENDENCIES = 
test_sodium_crypt_LDFLAGS = 
jrb_test_msg_OBJECTS =  jrb_test_msg.$(OBJEXT)
jrb_test_msg_LDADD = $(LDADD)
jrb_test_msg_DEPENDENCIES = 
jrb_test_msg_LDFLAGS = 
neuropil_node_OBJECTS =  neuropil_node.$(OBJEXT)
neuropil_node_LDADD = $(LDADD)
neuropil_node_DEPENDENCIES = 
neuropil_node_LDFLAGS = 
neuropil_controller_OBJECTS = neuropil_controller.$(OBJEXT)
neuropil_controller_LDADD = $(LDADD)
neuropil_controller_DEPENDENCIES = 
neuropil_controller_LDFLAGS = 
neuropil_sender_OBJECTS = neuropil_sender.$(OBJEXT)
neuropil_sender_LDADD = $(LDADD)
neuropil_sender_DEPENDENCIES = 
neuropil_sender_LDFLAGS = 
neuropil_receiver_OBJECTS = neuropil_receiver.$(OBJEXT)
neuropil_receiver_LDADD = $(LDADD)
neuropil_receiver_DEPENDENCIES = 
neuropil_receiver_LDFLAGS = 

CFLAGS = -g -Wall -O2
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
DEP_FILES =  .deps/neuropil_node.P .deps/neuropil_controller.P .deps/neuropil_sender.P .deps/neuropil-receiver.P .deps/jrb_test_msg.P .deps/test_sodium_crypt.P .deps/test_node_ser.P .deps/test_memory_alloc.P
SOURCES = $(neuropil_node_SOURCES) $(neuropil_controller_SOURCES) $(neuropil_sender_SOURCES) $(neuropil_receiver_SOURCES) $(jrb_test_msg_SOURCES) $(test_sodium_crypt_SOURCES) $(test_node_ser_SOURCES) $(test_memory_alloc_SOURCES)
OBJECTS = $(neuropil_node_OBJECTS) $(neuropil_controller_OBJECTS) $(neuropil_sender_OBJECTS) $(neuropil_receiver_OBJECTS) $(jrb_test_msg_OBJECTS) $(test_sodium_crypt_OBJECTS) $(test_node_ser_OBJECTS) $(test_memory_alloc_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

test_memory_alloc$(EXEEXT): $(test_memory_alloc_OBJECTS) $(test_memory_alloc_DEPENDENCIES)
	@rm -f test_memory_alloc$(EXEEXT)
	$(LINK) $(test_memory_alloc_LDFLAGS) $(test_memory_alloc_OBJECTS) $(test_memory_alloc_LDADD) $(LIBS)

test_node_ser$(EXEEXT): $(test_node_ser_OBJECTS) $(test_node_ser_DEPENDENCIES)
	@rm -f test_node_ser$(EXEEXT)
	$(LINK) $(test_node_ser_LDFLAGS) $(test_node_ser_OBJECTS) $(test_node_ser_LDADD) $(LIBS)

test_sodium_crypt$(EXEEXT): $(test_sodium_crypt_OBJECTS) $(test_sodium_crypt_DEPENDENCIES)
	@rm -f test_sodium_crypt$(EXEEXT)
	$(LINK) $(test_sodium_crypt_LDFLAGS) $(test_sodium_crypt_OBJECTS) $(test_sodium_crypt_LDADD) $(LIBS)
	
jrb_test_msg$(EXEEXT): $(jrb_test_msg_OBJECTS) $(jrb_test_msg_DEPENDENCIES)
	@rm -f jrb_test_msg$(EXEEXT)
	$(LINK) $(jrb_test_msg_LDFLAGS) $(jrb_test_msg_OBJECTS) $(jrb_test_msg_LDADD) $(LIBS)

neuropil_node$(EXEEXT): $(neuropil_node_OBJECTS) $(neuropil_node_DEPENDENCIES)
	@rm -f neuropil_node$(EXEEXT)
	$(LINK) $(neuropil_node_LDFLAGS) $(neuropil_node_OBJECTS) $(neuropil_node_LDADD) $(LIBS)

neuropil_controller$(EXEEXT): $(neuropil_controller_OBJECTS) $(neuropil_controller_DEPENDENCIES)
	@rm -f neuropil_controller$(EXEEXT)
	$(LINK) $(neuropil_controller_LDFLAGS) $(neuropil_controller_OBJECTS) $(neuropil_controller_LDADD) $(LIBS)

neuropil_sender$(EXEEXT): $(neuropil_sender_OBJECTS) $(neuropil_sender_DEPENDENCIES)
	@rm -f neuropil_sender$(EXEEXT)
	$(LINK) $(neuropil_sender_LDFLAGS) $(neuropil_sender_OBJECTS) $(neuropil_sender_LDADD) $(LIBS)

neuropil_receiver$(EXEEXT): $(neuropil_receiver_OBJECTS) $(neuropil_receiver_DEPENDENCIES)
	@rm -f neuropil_receiver$(EXEEXT)
	$(LINK) $(neuropil_receiver_LDFLAGS) $(neuropil_receiver_OBJECTS) $(neuropil_receiver_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES) $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = test

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu test/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags mostlyclean-depend \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-depend clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-depend distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
