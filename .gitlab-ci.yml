default:
  image: $CI_REGISTRY_IMAGE/dev-enviroment

cache:
  key: "${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}"
  paths:
    - venv

stages:
  - enviroment
  - test
  - build
  - qa
  - release

setup:
  stage: enviroment
  before_script:
    - docker info
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/dev-enviroment:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE/dev-enviroment -f docker/dev-enviroment.Dockerfile --build-arg CI_REPOSITORY_URL=$CI_REPOSITORY_URL --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA --build-arg GITLAB_USER_EMAIL=$GITLAB_USER_EMAIL docker/
    - docker push $CI_REGISTRY_IMAGE/dev-enviroment
  image: docker:latest
  services:
    - docker:dind
  only:
    changes:
      - docker/*
      - requirements.txt
      - SConstruct
      - .gitlab-ci.yml

test:
  stage: test
  script: ./do test
  artifacts:
    reports:
      junit: neuropil_test_suite-junit.xml
  except:
    refs:
      - neuropil_.*
      - latest_release

build:linux:
  stage: build
  script: ./do build linux
  artifacts:
    name: neuropil-linux
    paths:
      - build/linux
  except:
    refs:
      - neuropil_.*
      - latest_release

#build:freebsd:
#  stage: build
#  script: ./do build freebsd
#  artifacts:
#    name: neuropil-freebsd
#    paths:
#      - build/freebsd
#  except:
#    refs:
#      - neuropil_.*
#      - latest_release

build:documentation:
  stage: build
  script: ./do doc
  artifacts:
    name: neuropil-documentation
    paths:
      - build/doc/html
  except:
    refs:
      - neuropil_.*
      - latest_release

qa:smoke_tests:
  stage: qa
  script:
      - ./do smoke
  artifacts:
    reports:
      junit: smoke_test-junit.xml
  except:
    refs:
      - neuropil_.*
      - latest_release

qa:package:
  stage: qa
  script:
    - ./do package
  artifacts:
    name: neuropil-release
    paths:
      - build/package/*
  only:
    refs:
      - master
  except:
    refs:
      - neuropil_.*
      - latest_release
  dependencies:
    - build:documentation
    - build:linux

release:
  stage: release
  script:
    - ./do release
    # auto saltstack deploy
  when: manual
  only:
    refs:
      - master
  except:
    refs:
      - neuropil_.*
      - latest_release
  dependencies:
    - qa:package
    - build:documentation
    - build:linux

pages:
  stage: release
  script:
    - mkdir -p public
    - rsync -r build/doc/html/ public/
  artifacts:
    paths:
    - public/
  when: manual
  only:
    refs:
      - master
  except:
    refs:
      - neuropil_.*
      - latest_release
  dependencies:
    - build:documentation