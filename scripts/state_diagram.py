'''
To evaluate the .puml file generated by this script use www.plantuml.com/plantuml
'''

from pathlib import Path
import re
import os
import subprocess
import plantuml

r = re.compile(r'NP_UTIL_STATEMACHINE_TRANSITION\(\s*(?P<MACHINE>[a-zA-Z0-9\"\-_]+)\s*,\s*(?P<SOURCE_STATE>[a-zA-Z0-9\"\-_]+)\s*,\s*(?P<TARGET_STATE>[a-zA-Z0-9\"\-_]+)\s*,\s*(?P<ACTION>[a-zA-Z0-9\"\-_]+)\s*,\s*(?P<CONDITION>[a-zA-Z0-9\"\-_]+)\s*\)')

with open("../src/np_key.c","r") as f:
    t = f.read()

res = {}
for ele in r.finditer(t):
    ss = ele.group("SOURCE_STATE")
    if ss not in res:
        res[ss] = []

    res[ss].append({
        "target": ele.group("TARGET_STATE"),
        "cond":   ele.group("CONDITION").replace("_", " ").strip(),
        "action": ele.group("ACTION").replace("_", " ").strip(),
    })

puml ="@startuml\n\n"
puml += "[*] --> UNUSED\n"

for k,v  in res.items():
    for ve  in v:
        if k != ve['target']:
            puml += f"{k} --> {ve['target']}"
            if ve['cond'] and ve['cond'].upper() != "NULL":
                puml += f": {ve['cond']}"
            puml += "\n"
        else:
            if ve['cond'] and ve['cond'].upper() != "NULL":
                puml += f"{k} : {ve['cond']}\n"
                puml += f"{k} :  -> {ve['action']}\n"


puml += "IN_DESTROY --> [*]\n"
puml += "@enduml\n"

path = Path("../build/puml")
path.mkdir(parents=True, exist_ok=True)
with open(os.path.join(path,"states.puml"),"w+") as f:
    t = f.write(puml)

pu = plantuml.PlantUML(url="http://www.plantuml.com/plantuml/svg/")

img = pu.processes(puml)
svg_path = os.path.join(path,"states.svg")
with open(svg_path,"wb+") as f:
    t = f.write(img)

subprocess.run(["firefox", svg_path])